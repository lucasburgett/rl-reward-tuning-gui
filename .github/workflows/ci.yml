name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  OMP_NUM_THREADS: "1"
  MKL_NUM_THREADS: "1"
  OPENBLAS_NUM_THREADS: "1"
  NUMEXPR_NUM_THREADS: "1"
  PYTHONHASHSEED: "0"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"
      - name: Install pre-commit (and tooling)
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit
        run: pre-commit run -a --show-diff-on-failure

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends swig
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run pytest
        run: pytest -q

  smoke:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"
      - name: Install system packages (Box2D build, optional video)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends swig ffmpeg
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: CartPole tiny train (CPU)
        run: |
          python -m src.train env=cartpole algo=ppo total_steps=5000 use_wandb=false
      - name: LunarLander import smoke
        run: |
          python - <<'PY'
          import gymnasium as gym
          gym.make("LunarLander-v3")
          print("OK: LunarLander-v3 created")
          PY